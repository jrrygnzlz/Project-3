print( paste( "x", "x", sqrtx^2", guess*guess,"error", error))
print(paste("x^2 =", (sqrt(x))^2, "guess*guess =", guess * guess, "error =", error))
i=1
while(error.tol) {
guess = (guess +x/guess)/2
error = guess*guess-x
print(paste "i=", i, "x", x, "sqrtx^2", guess*guess, "error", error))
x<-5
tol <- .00000001
guess <- 4
error = 2*tol
while(error.tol) {
guess = (guess +x/guess)/2
error = guess*guess - x
print(paste "i=", i, "x", x, "sqrtx^2", guess*guess, "error", error))
while(error.tol) {
guess = (guess +x/guess)/2
error = guess*guess - x
print(paste "i=", i, "x", x, "sqrtx^2", guess*guess, "error", error))
require(ape)
require(ouch)
require(phylobase)
# simpletree <- rcoal(length(LETTERS[1:7]), rooted = TRUE, tip.label = LETTERS[1:7], br = "coalescent")
simpletree<-structure(list(
edge = matrix(
c(8, 9, 10, 10, 9, 11, 11, 8, 12, 12, 13, 13,
9, 10, 1, 2, 11, 3, 4, 12, 5, 13, 6, 7),
nrow=12L),
tip.label = c("A", "B", "C", "D", "E", "F", "G"),
Nnode = 6L
),
class = "phylo")
plot(simpletree,no.margin=TRUE)
simpletree$edge
simpletree$tip.label
simpletree$Nnode
class(simpletree)
#NEXUS
Begin TAXA;
Dimensions ntax=4;
plot(simpletree,no.margin=TRUE)
nodelabels()
tiplabels()
simpletree$edge
unclass(simpletree)
nodes=1:13
ancestors =c(NA, 3, 2, 6, 6, 1, 2, 2, 3, 4, 4, 5, 5)
ancestors =c(NA, 3, 1, 6, 6, 1, 2, 2, 3, 4, 4, 5, 5)
cbind(nodes, ancestors)
times = runif(13)
times
library(ouch)
install.packages(ouch)
install.packages(ouch)
install.packages("ouch")
library(ouch)
ape2ouch(simpletree)
require(ape)
require(ggtree)
require(treeio)
tree <- rtree(20)
class(tree)
plot(tree)  # ape plotting function
treeio::write.nexus(tree, file="tree.nex")
treeio::write.tree(tree, file="tree.tree")
list.files()
tree_nex <- treeio::read.nexus(file="tree.nex")
tree_new <- treeio::read.newick(file="tree.tree")
class(tree_nex)
class(tree_new)
as.phylo (tree)  # to phylo
as.treedata(tree) # to treedata
as_tibble(treedata)  # to tibble
treedata <- as.treedata(tree)
as_tibble(treedata)  # to tibble
ggtree(tree) + geom_tiplab()
p <- ggtree(tree) + geom_tiplab()
get_taxa_name(p)
taxa <- get_taxa_name(p)
n <- length(taxa)
size <- rnorm(n, mean=20, sd=5)
habitat <- sample(c("desert", "grassland", "forest", "intertidal"), size=n, replace=T)
dat <- data.frame( "label"= taxa, size, habitat)
as.treedata(p) %>% as_tibble %>% as.data.frame
ttree <- full_join(tree, dat, by = "label")
ttree
ttree %>% as_tibble %>% as.data.frame
## load `tree_nwk`, `df_info`, `df_alleles`, and `df_bar_data` from 'TDbook'
tree <- tree_nwk
## load `tree_nwk`, `df_info`, `df_alleles`, and `df_bar_data` from 'TDbook'
tree <- tree_nwk
require(ggtree)
require(ggplot2)
require(dplyr)
require(TDbook)
p <- ggtree(tree_boots) %<+% df_tip_data + xlim(-.1, 4)
p2 <- p + geom_tiplab(offset = .6, hjust = .5) +
geom_tippoint(aes(shape = trophic_habit, color = trophic_habit,
size = mass_in_kg)) +
theme(legend.position = "right") +
scale_size_continuous(range = c(3, 10))
p2 %<+% df_inode_data +
geom_label(aes(label = vernacularName.y, fill = posterior)) +
scale_fill_gradientn(colors = RColorBrewer::brewer.pal(3, "YlGnBu"))
## load `tree_nwk`, `df_info`, `df_alleles`, and `df_bar_data` from 'TDbook'
tree <- tree_nwk
snps <- df_alleles
snps_strainCols <- snps[1,]
snps<-snps[-1,] # drop strain names
colnames(snps) <- snps_strainCols
gapChar <- "?"
snp <- t(snps)  # not rectangular!
lsnp <- apply(snp, 1, function(x) {
x != snp[1,] & x != gapChar & snp[1,] != gapChar
})  # different from row 1, not missing
lsnp <- as.data.frame(lsnp)
lsnp$pos <- as.numeric(rownames(lsnp))  # position from rownames
lsnp <- tidyr::gather(lsnp, name, value, -pos)
snp_data <- lsnp[lsnp$value, c("name", "pos")] # only TRUEs
## attach the sampling information data set
## and add symbols colored by location
p <- p %<+% df_info + geom_tippoint(aes(color=location))
p
p1 <- p + geom_facet(panel = "SNP", data = snp_data, geom = geom_point,
mapping=aes(x = pos, color = location), shape = '|')
## visualize SNP and Trait data using dot and bar charts,
## and align them based on tree structure
p1 <- p + geom_facet(panel = "SNP", data = snp_data, geom = geom_point,
mapping=aes(x = pos, color = location), shape = '|')
## visualize SNP and Trait data using dot and bar charts,
## and align them based on tree structure
p1 <- p + geom_facet(panel = "SNP", data = snp_data, geom = geom_point,
mapping=aes(x = pos, color = location), shape = '|')
gapChar <- "?"
snp <- t(snps)  # not rectangular!
lsnp <- apply(snp, 1, function(x) {
x != snp[1,] & x != gapChar & snp[1,] != gapChar
})  # different from row 1, not missing
lsnp <- as.data.frame(lsnp)
lsnp$pos <- as.numeric(rownames(lsnp))  # position from rownames
lsnp <- tidyr::gather(lsnp, name, value, -pos)
snp_data <- lsnp[lsnp$value, c("name", "pos")] # only TRUEs
## visualize the tree
p <- ggtree(tree)
## attach the sampling information data set
## and add symbols colored by location
p <- p %<+% df_info + geom_tippoint(aes(color=location))
p
p1 <- p + geom_facet(panel = "SNP", data = snp_data, geom = geom_point,
mapping=aes(x = pos, color = location), shape = '|')
p1
p1 + geom_facet(panel = "Trait", data = df_bar_data, geom = geom_col,
aes(x = dummy_bar_value, color = location,
fill = location), orientation = 'y', width = .6) +
theme_tree2(legend.position=c(.05, .85))
HI_Data
getwd()
setwd("C:/Users/jerry/Documents/Git")
getwd()
setwd("C:/Users/jerry/Documents/Git/Project-1-2-3")
setwd("C:/Users/jerry/Documents/Git/Project-1-2-3/Project-3")
getwd()
# Read the data and save it as HI_Data
HI_Data <- read.csv("HI_SU2024_SHD_SLK.csv")
library(here)
# Read the data and save it as HI_Data
HI_Data <- read.csv("HI_SU2024_SHD_SLK.csv")
library(dplyr)
library(skimr)
dplyr::glimpse(HI_Data)
summary(HI_Data)
library(dplyr)
summary(HI_Data)
skimr::skim(HI_Data)
skimr::skim(HI_Data)
library(dplyr)
HI_Data <- HI_Data %>%
mutate(
Days_diff = Days_SK - Days_SHD,    # How many days between shedding and silking
GDD_diff = GDD_SK - GDD_SHD     # How many growing degree days between shedding and silking
)
dplyr::glimpse(HI_Data)
HI_Data
library(dplyr)
HI_Data %>%
group_by(PEDIGREE) %>%
summarise(
mean_Days_SHD = mean(Days_SHD, na.rm = TRUE),
mean_Days_SK = mean(Days_SK, na.rm = TRUE),
mean_Days_diff = mean(Days_diff, na.rm = TRUE),
mean_GDD_diff = mean(GDD_diff, na.rm = TRUE)
)
install.packages("stringr")
install.packages("stringr")
library(stringr)
HI_Data <- HI_Data %>%
mutate(PEDIGREE = str_trim(PEDIGREE))  # trims leading/trailing spaces
HI_Data
HI_Data %>%
group_by(PEDIGREE) %>%
summarise(
mean_Days_SHD = mean(Days_SHD, na.rm = TRUE),
mean_Days_SK = mean(Days_SK, na.rm = TRUE),
mean_Days_diff = mean(Days_diff, na.rm = TRUE),
mean_GDD_diff = mean(GDD_diff, na.rm = TRUE)
)
HI_Data
# Create the summarized table
HI_Summary <- HI_Data %>%
group_by(PEDIGREE) %>%
summarise(
mean_Days_SHD = mean(Days_SHD, na.rm = TRUE),
mean_Days_SK = mean(Days_SK, na.rm = TRUE),
mean_Days_diff = mean(Days_diff, na.rm = TRUE),
mean_GDD_diff = mean(GDD_diff, na.rm = TRUE)
) %>%
rename(
`Avg days to shedding` = mean_Days_SHD,
`Avg days to silking` = mean_Days_SK,
`Avg days between shedding and silking` = mean_Days_diff,
`Avg difference of GDD between shedding and silking` = mean_GDD_diff
)
# View the clean table
HI_Summary
# View the clean table
HI_Summary
HI_Summary
HI_Data
library(dplyr)
HI_Data <- HI_Data %>%
rename(
`Shed Date` = SHD,
`Days to Shedding` = Days_SHD,
`Shed GDD` = GDD_SHD,
`Silk Date` = SK,
`Days to Silking` = Days_SK,
`Silk GDD` = GDD_SK,
`Days between Shedding and Silking` = Days_diff,
`Difference in GDD between Shedding and Silking` = GDD_diff
)
# View the updated data
HI_Data
# View the updated data
HI_Data
library(knitr)
kable(HI_Data)
kable(HI_Summary)
install.packages("gt")
library(gt)
HI_Data %>%
gt()
HI_Data
kableExtra(HI_Data)
# View the Tables
HI_Data
kable(HI_Data)
kable(HI_Summary)
# View the Tables
HI_Data
HI_Summary
kable(HI_Data)
kable(HI_Summary)
# Lets add some code to make the tables look really nice when we view it in the website html.
library(gt)
HI_Data %>%
gt()
HI_Summary %>%
gt()
library(ggplot2)
ggplot(HI_Data, aes(x = PEDIGREE, y = `Days to Shedding`)) +
geom_boxplot() +
labs(title = "Days to Shedding by Variety", x = "Variety", y = "Days After Planting") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(HI_Data, aes(x = PEDIGREE, y = `Days between Shedding and Silking`)) +
geom_boxplot() +
labs(title = "Days Between Shedding and Silking by Variety", x = "Variety", y = "Days Difference") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(HI_Data, aes(x = `Shed GDD`, y = `Silk GDD`, color = PEDIGREE)) +
geom_point(size = 3) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
labs(title = "Relationship between Shed GDD and Silk GDD", x = "Shed GDD", y = "Silk GDD")
ggplot(HI_Data, aes(x = `Days between Shedding and Silking`)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "Histogram of Days between Shedding and Silking", x = "Days Difference", y = "Count")
library(ggplot2)
ggplot(HI_Data, aes(x = `Shed GDD`, y = `Silk GDD`, color = PEDIGREE)) +
geom_point(size = 3) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
labs(title = "Relationship between Shed GDD and Silk GDD", x = "Shed GDD", y = "Silk GDD") +
scale_color_brewer(palette = "Dark2") +  # MUCH more distinct colors
theme_minimal()
ggplot(HI_Data, aes(x = `Days between Shedding and Silking`, fill = PEDIGREE)) +
geom_histogram(binwidth = 1, color = "black", position = "identity", alpha = 0.6) +
labs(title = "Histogram of Days between Shedding and Silking by Variety", x = "Days Difference", y = "Count") +
scale_fill_brewer(palette = "Dark2") +
theme_minimal()
# First, count how many plants per PEDIGREE per Days_diff
library(dplyr)
count_data <- HI_Data %>%
group_by(PEDIGREE, `Days between Shedding and Silking`) %>%
summarise(count = n(), .groups = "drop")
# Now plot
ggplot(count_data, aes(x = `Days between Shedding and Silking`, y = count, fill = PEDIGREE, label = PEDIGREE)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = PEDIGREE), position = position_dodge(width = 0.9), vjust = -0.5, size = 3) +
labs(title = "Days between Shedding and Silking (by Variety)", x = "Days Difference", y = "Count") +
scale_fill_brewer(palette = "Dark2") +
theme_minimal()
ggplot(count_data, aes(x = `Days between Shedding and Silking`, y = count, fill = PEDIGREE, label = PEDIGREE)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = PEDIGREE), position = position_dodge(width = 0.9), vjust = -0.5, size = 3) +
labs(title = "Days between Shedding and Silking (by Variety)", x = "Days Difference", y = "Count") +
scale_fill_brewer(palette = "Dark2") +
scale_x_continuous(breaks = seq(from = min(count_data$`Days between Shedding and Silking`),
to = max(count_data$`Days between Shedding and Silking`),
by = 1)) +   # << this is the fix!
theme_minimal()
ggplot(HI_Summary, aes(x = PEDIGREE, y = `Avg days to shedding`)) +
geom_bar(stat = "identity", fill = "lightgreen") +
labs(title = "Average Days to Shedding by Variety", x = "Variety", y = "Avg Days") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
## We'll be able to easily spot which varieties have better synchrony (closer to 0)
ggplot(HI_Summary, aes(x = PEDIGREE, y = `Avg days between shedding and silking`)) +
geom_bar(stat = "identity", fill = "coral") +
labs(title = "Average Days between Shedding and Silking by Variety", x = "Variety", y = "Avg Days Difference") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(HI_Summary, aes(x = `Avg days to shedding`, y = `Avg days to silking`)) +
geom_point(size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Correlation between Avg Days to Shedding and Avg Days to Silking", x = "Avg Days to Shedding", y = "Avg Days to Silking")
library(ggrepel)
install.packages("ggrepel")
library(ggrepel)
ggplot(HI_Summary, aes(x = `Avg days to shedding`, y = `Avg days to silking`, label = PEDIGREE)) +
geom_point(size = 3) +
geom_text_repel(size = 3) +    # <-- smart labeling
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Correlation between Avg Days to Shedding and Avg Days to Silking",
x = "Avg Days to Shedding",
y = "Avg Days to Silking") +
theme_minimal()
anova_days_diff <- aov(`Days between Shedding and Silking` ~ PEDIGREE, data = HI_Data)
summary(anova_days_diff)
anova_days_diff <- aov(`Days between Shedding and Silking` ~ PEDIGREE, data = HI_Data)
summary(anova_days_diff)
cor.test(HI_Summary$`Avg days to shedding`, HI_Summary$`Avg days to silking`)
source("~/Git/Project-1-2-3/Project-3/Project_3_cleaned_script.R", echo=TRUE)
## ---- Fixpath ----
getwd()
setwd("C:/Users/jerry/Documents/Git")
getwd()
setwd("C:/Users/jerry/Documents/Git/Project-1-2-3")
setwd("C:/Users/jerry/Documents/Git/Project-1-2-3/Project-3")
getwd()
install.packages("here")
library(here)
data_location <- here("HI_SU2024_SHD_SLK.csv")
HI_Data <- read.csv("HI_SU2024_SHD_SLK.csv")
install.packages("here")
library(dplyr)
library(skimr)
dplyr::glimpse(HI_Data)
summary(HI_Data)
skimr::skim(HI_Data)
library(dplyr)
HI_Data <- HI_Data %>%
mutate(
Days_diff = Days_SK - Days_SHD,    # How many days between shedding and silking
GDD_diff = GDD_SK - GDD_SHD     # How many growing degree days between shedding and silking
)
dplyr::glimpse(HI_Data)
HI_Data
library(dplyr)
HI_Data %>%
group_by(PEDIGREE) %>%
summarise(
mean_Days_SHD = mean(Days_SHD, na.rm = TRUE),
mean_Days_SK = mean(Days_SK, na.rm = TRUE),
mean_Days_diff = mean(Days_diff, na.rm = TRUE),
mean_GDD_diff = mean(GDD_diff, na.rm = TRUE)
install.packages("stringr")
# Finish summarising first
HI_Data %>%
group_by(PEDIGREE) %>%
summarise(
mean_Days_SHD = mean(Days_SHD, na.rm = TRUE),
mean_Days_SK = mean(Days_SK, na.rm = TRUE),
mean_Days_diff = mean(Days_diff, na.rm = TRUE),
mean_GDD_diff = mean(GDD_diff, na.rm = TRUE)
# THEN on a new line, install stringr separately
install.packages("stringr")
# THEN on a new line, install stringr separately
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
library(stringr)
HI_Data <- HI_Data %>%
mutate(PEDIGREE = str_trim(PEDIGREE))  # trims leading/trailing spaces
HI_Data
HI_Data %>%
group_by(PEDIGREE) %>%
summarise(
mean_Days_SHD = mean(Days_SHD, na.rm = TRUE),
mean_Days_SK = mean(Days_SK, na.rm = TRUE),
mean_Days_diff = mean(Days_diff, na.rm = TRUE),
mean_GDD_diff = mean(GDD_diff, na.rm = TRUE)
)
HI_Data
# Create the summarized table
HI_Summary <- HI_Data %>%
group_by(PEDIGREE) %>%
summarise(
mean_Days_SHD = mean(Days_SHD, na.rm = TRUE),
mean_Days_SK = mean(Days_SK, na.rm = TRUE),
mean_Days_diff = mean(Days_diff, na.rm = TRUE),
mean_GDD_diff = mean(GDD_diff, na.rm = TRUE)
) %>%
rename(
`Avg days to shedding` = mean_Days_SHD,
`Avg days to silking` = mean_Days_SK,
`Avg days between shedding and silking` = mean_Days_diff,
`Avg difference of GDD between shedding and silking` = mean_GDD_diff
)
library(dplyr)
HI_Data <- HI_Data %>%
rename(
`Shed Date` = SHD,
`Days to Shedding` = Days_SHD,
`Shed GDD` = GDD_SHD,
`Silk Date` = SK,
`Days to Silking` = Days_SK,
`Silk GDD` = GDD_SK,
`Days between Shedding and Silking` = Days_diff,
`Difference in GDD between Shedding and Silking` = GDD_diff
)
library(gt)
HI_Data %>%
gt()
HI_Summary %>%
gt()
library(ggplot2)
ggplot(HI_Data, aes(x = PEDIGREE, y = `Days to Shedding`)) +
geom_boxplot() +
labs(title = "Days to Shedding by Variety", x = "Variety", y = "Days After Planting") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(HI_Data, aes(x = PEDIGREE, y = `Days between Shedding and Silking`)) +
geom_boxplot() +
labs(title = "Days Between Shedding and Silking by Variety", x = "Variety", y = "Days Difference") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
ggplot(HI_Data, aes(x = `Shed GDD`, y = `Silk GDD`, color = PEDIGREE)) +
geom_point(size = 3) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
labs(title = "Relationship between Shed GDD and Silk GDD", x = "Shed GDD", y = "Silk GDD") +
scale_color_brewer(palette = "Dark2") +
theme_minimal()
library(dplyr)
count_data <- HI_Data %>%
group_by(PEDIGREE, `Days between Shedding and Silking`) %>%
summarise(count = n(), .groups = "drop")
ggplot(count_data, aes(x = `Days between Shedding and Silking`, y = count, fill = PEDIGREE, label = PEDIGREE)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = PEDIGREE), position = position_dodge(width = 0.9), vjust = -0.5, size = 3) +
labs(title = "Days between Shedding and Silking (by Variety)", x = "Days Difference", y = "Count") +
scale_fill_brewer(palette = "Dark2") +
scale_x_continuous(breaks = seq(from = min(count_data$`Days between Shedding and Silking`),
to = max(count_data$`Days between Shedding and Silking`),
by = 1)) +   # << this is the fix!
theme_minimal()
anova_days_diff <- aov(`Days between Shedding and Silking` ~ PEDIGREE, data = HI_Data)
summary(anova_days_diff)
ggplot(HI_Summary, aes(x = PEDIGREE, y = `Avg days to shedding`)) +
geom_bar(stat = "identity", fill = "lightgreen") +
labs(title = "Average Days to Shedding by Variety", x = "Variety", y = "Avg Days") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(HI_Summary, aes(x = PEDIGREE, y = `Avg days between shedding and silking`)) +
geom_bar(stat = "identity", fill = "coral") +
labs(title = "Average Days between Shedding and Silking by Variety", x = "Variety", y = "Avg Days Difference") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
install.packages("ggrepel")
library(ggrepel)
ggplot(HI_Summary, aes(x = `Avg days to shedding`, y = `Avg days to silking`, label = PEDIGREE)) +
geom_point(size = 3) +
geom_text_repel(size = 3) +    # <-- smart labeling
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Correlation between Avg Days to Shedding and Avg Days to Silking",
x = "Avg Days to Shedding",
y = "Avg Days to Silking") +
theme_minimal()
install.packages("ggrepel")
cor.test(HI_Summary$`Avg days to shedding`, HI_Summary$`Avg days to silking`)
ggplot(count_data, aes(x = `Days between Shedding and Silking`, y = count, fill = PEDIGREE, label = PEDIGREE)) +
geom_bar(stat = "identity", position = "dodge") +
geom_text(aes(label = PEDIGREE),
position = position_dodge(width = 0.9),
angle = 90,        # <-- rotate vertical
vjust = 0.5,
hjust = -0.2,
size = 3) +
labs(title = "Days between Shedding and Silking (by Variety)",
x = "Days Difference",
y = "Count") +
scale_fill_brewer(palette = "Dark2") +
scale_x_continuous(breaks = seq(from = min(count_data$`Days between Shedding and Silking`),
to = max(count_data$`Days between Shedding and Silking`),
by = 1)) +
theme_minimal()
source("~/Git/Project-1-2-3/Project-3/Project_3_full_script.R", echo=TRUE)
install.packages("ggrepel")
install.packages("stringr")
install.packages("here")
